# Generated by Django 5.0.7 on 2024-07-17 16:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("movie", "0003_director_bio_alter_actor_bio_alter_movie_description_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="actor",
            name="bio",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="director",
            name="bio",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="movie",
            name="actors",
            field=models.ManyToManyField(
                blank=True, null=True, related_name="movies", to="movie.actor"
            ),
        ),
        migrations.AlterField(
            model_name="movie",
            name="description",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="movie",
            name="director",
            field=models.ManyToManyField(
                blank=True, null=True, related_name="movies", to="movie.director"
            ),
        ),
        migrations.AlterField(
            model_name="movie",
            name="genres",
            field=models.ManyToManyField(
                blank=True, null=True, related_name="movies", to="movie.genre"
            ),
        ),
        migrations.AlterField(
            model_name="review",
            name="comment",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="review",
            name="creator",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reviews",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="favourite_films",
            field=models.ManyToManyField(
                blank=True, null=True, related_name="users", to="movie.movie"
            ),
        ),
    ]
